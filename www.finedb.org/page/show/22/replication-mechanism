<!DOCTYPE html>
<html lang="en">
<head>
	<title>FineDB: Replication mechanism</title>
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
	<script src="/js/jquery-ui-1.9.2.custom.min.js"></script>
		<link href="/css/bootstrap-2.3.1.css" rel="stylesheet" media="screen" />
	<script src="/js/bootstrap.min.js" type="text/javascript"></script>
		<link href="/css/prettify.css" type="text/css" rel="stylesheet" />
	<script src="/js/prettify.js" type="text/javascript"></script>
		<link href="/css/style.css" rel="stylesheet" media="screen" />
	<script src="/js/ark.js" type="text/javascript"></script>
				<script type="text/javascript" src="//finedb.disqus.com/embed.js" async></script>
	</head>
<body onload="prettyPrint()" >
<div class="navbar navbar-fixed-top">
	<div class="navbar-inner">
		<div class="container-fluid">
			<a href="/" class="brand">FineDB</a>
						<ul class="nav pull-right">
									<li><a href="/identification/login">Login</a></li>
							</ul>
		</div>
	</div>
</div>
<style type="text/css">
	table.bordered {
		border: 1px solid #888;
	}
	table.bordered th {
		border: 1px solid #888;
		padding: 3px;
		background-color: #ddd;
	}
	table.bordered td {
		border: 1px solid #888;
		padding: 3px;
		background-color: #fff;
	}
	div.bordered {
		border: 1px solid #888;
		display: inline-block;
	}
</style>

<div id="modal-move" class="modal hide fade" data-keyboard="true">
	<div class="modal-header">
		<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
		<h3>Move page</h3>
	</div>
	<div class="modal-body">
		<div style="margin-bottom: 8px;">
			<i class="icon-home"></i> Homepage
			<button class="btn" onclick="ark.movePage(22, 0)">Move</button>
		</div>
					<div id="move-list-0">
		<form class="form-inline" onsubmit="return false" style="margin-bottom: 8px;">
			<select id="sel-move-0" onchange="ark.selectMove(22, 0, this.value)" style="width: 400px;">
				<option value="0">Choose a page...</option>
															<option value="18">Licenses</option>
																				<option value="1">Protocol</option>
																				<option value="20">Internal design</option>
																				<option value="16">Development status</option>
																				<option value="17">Comparison with other database systems</option>
																				<option value="3">Links</option>
												</select>
			<button id="btn-move-0" onclick="ark.movePage(22, 0)" class="btn hide">Move</button>
		</form>
	</div>
	<div id="move-sub-0"></div>
	</div>
	<div class="modal-footer">
		<button class="btn" onclick="$('#modal-move').modal('hide')">Cancel</a>
	</div>
</div>
<div class="container-fluid">
	<div class="row-fluid">
				<div class="span3">
				<div class="well well-small clearfix" style="margin-bottom: 0.5em;">
					<a href="/page/show/20" class="btn btn-info" title="Go to parent page"><i class="icon-arrow-up"></i></a>
								</div>

		</div>
				<div class="span9">
											<ul class="breadcrumb">
					<li><a href="/" title="Home"><i class="icon-home"></i></a> <span class="divider">/</span></li>
											<li>
							<a href="/page/show/20">Internal design</a>
													</li>
									</ul>
								<h1>Replication mechanism</h1>
								<div id="content" class="well">
					<h2 id="Introduction">Introduction</h2>
<p>Like all other aspects of FineDB, its replication mechanism try to be simple (to code and to set up) and efficient (fast, not ressource intensive) at the same time. It is based on two principles:</p>
<ol>
<li>Data are pushed from the source to the destination.
</li>
<li>Each server can push data to only one other node.</li></ol>



<h2 id="Master-slave-replication">Master-slave replication</h2>
<p>Every operation processed by the master server is echoed to the slave.</p>

<p><img src="/img/master-slave.png" alt="/img/master-slave.png" /></p>

<p>In a multi-slave environment, slave servers form a chain, each one pushing data to the next.</p>

<p><img src="/img/master-multislave.png" alt="/img/master-multislave.png" /></p>


<h2 id="Master-master-replication">Master-master replication</h2>
<h3 id="Loop-cluster">Loop cluster</h3>
<p>Using the same technic than for master/slave replication, it is possible to set up a &quot;loop&quot;. When a key/value must be created or updated, each server send it to the next one; it is discarded when it come back to the original server.</p>

<p><img src="/img/loop-multimaster.png" alt="/img/loop-multimaster.png" /></p>

<p>Loop clusters are fine when there is few computers in the cluster.</p>

<h3 id="Dispatcher">Dispatcher</h3>
<p>For bigger clusters, the replication needs an additional software to distribute data. Then all servers get the data without waiting for other servers to process it.</p>

<p><img src="/img/multimaster.png" alt="/img/multimaster.png" /></p>
				</div>
																					<div id="disqus_thread"></div>
									</div>
	</div>
</div>


<footer class="footer">
	<div class="container">
		<p>
			© 2013, Amaury Bouchard |
			<a href="http://skriv.org" target="_blank">Skriv</a> [write/work/organize]
		</p>
	</div>
</footer>

<script type="text/javascript"><!--
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-43066921-1']);
  _gaq.push(['_trackPageview']);


  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

//--></script>

</body>
</html>